{
    "$schema": "https://json-schema.org/draft/2020-12/schema",
    "$id": "https://raw.githubusercontent.com/nf-core/sammyseq/master/nextflow_schema.json",
    "title": "nf-core/sammyseq pipeline parameters",
    "description": "Analysis pipeline for SAMMY-seq",
    "type": "object",
    "$defs": {
        "input_output_options": {
            "title": "Input/output options",
            "type": "object",
            "fa_icon": "fas fa-terminal",
            "description": "Define where the pipeline should find input data and save output data.",
            "required": ["input", "outdir"],
            "properties": {
                "input": {
                    "type": "string",
                    "format": "file-path",
                    "exists": true,
                    "schema": "assets/schema_input.json",
                    "mimetype": "text/csv",
                    "pattern": "^\\S+\\.csv$",
                    "description": "Path to comma-separated file containing information about the samples in the experiment.",
                    "help_text": "You will need to create a design file with information about the samples in your experiment before running the pipeline. Use this parameter to specify its location. It has to be a comma-separated file with 5 columns, and a header row. See [usage docs](https://nf-co.re/sammyseq/usage#samplesheet-input).",
                    "fa_icon": "fas fa-file-csv"
                },
                "comparison": {
                    "type": "string",
                    "fa_icon": "fas fa-percentage",
                    "description": "Fraction comparisons per experimentalID (e.g., \"S2SvsS3\" or \"S2SvsS3,S2LvsS3\")",
                    "pattern": "^(S2SvsS3|S2LvsS3|S2SvsS4|S2LvsS4|S2vsS3|S2vsS4|S4vsS3)(,(S2SvsS3|S2LvsS3|S2SvsS4|S2LvsS4|S2vsS3|S2vsS4|S4vsS3))*$"
                },
                "comparisonFile": {
                    "type": "string",
                    "fa_icon": "fas fa-file-csv",
                    "description": "Path to comma-separated file containing the sample names for the desired paired comparisons.",
                    "help_text": "You will need to create a comparisons file with information about the desired comparisons in your experiment before running the pipeline. It has to be a comma-separated file with 2 columns: one for the first sample to compare and the second one to sample against which to do it. The sample names must match the sample names present in the first column of the samplesheet (`--input` parameter).",
                    "format": "file-path",
                    "mimetype": "text/csv"
                },
                "outdir": {
                    "type": "string",
                    "format": "directory-path",
                    "description": "The output directory where the results will be saved. You have to use absolute paths to storage on Cloud infrastructure.",
                    "fa_icon": "fas fa-folder-open"
                },
                "email": {
                    "type": "string",
                    "description": "Email address for completion summary.",
                    "fa_icon": "fas fa-envelope",
                    "help_text": "Set this parameter to your e-mail address to get a summary e-mail with details of the run sent to you when the workflow exits. If set in your user config file (`~/.nextflow/config`) then you don't need to specify this on the command line for every run.",
                    "pattern": "^([a-zA-Z0-9_\\-\\.]+)@([a-zA-Z0-9_\\-\\.]+)\\.([a-zA-Z]{2,5})$"
                },
                "multiqc_title": {
                    "type": "string",
                    "description": "MultiQC report title. Printed as page header, used for filename if not otherwise specified.",
                    "fa_icon": "fas fa-file-signature"
                }
            }
        },
        "reference_genome_options": {
            "title": "Reference genome options",
            "type": "object",
            "fa_icon": "fas fa-dna",
            "description": "Reference genome related files and options required for the workflow.",
            "properties": {
                "genome": {
                    "type": "string",
                    "description": "Name of iGenomes reference.",
                    "fa_icon": "fas fa-book",
                    "help_text": "If using a reference genome configured in the pipeline using iGenomes, use this parameter to give the ID for the reference. This is then used to build the full paths for all required reference genome files e.g. `--genome GRCh38`. \n\nSee the [nf-core website docs](https://nf-co.re/usage/reference_genomes) for more details."
                },
                "fasta": {
                    "type": "string",
                    "format": "file-path",
                    "exists": true,
                    "mimetype": "text/plain",
                    "pattern": "^\\S+\\.fn?a(sta)?(\\.gz)?$",
                    "description": "Path to FASTA genome file.",
                    "help_text": "This parameter is *mandatory* if `--genome` is not specified. If you don't have a BWA index available this will be generated for you automatically. Combine with `--save_reference` to save BWA index for future runs.",
                    "fa_icon": "far fa-file-code"
                },
                "igenomes_ignore": {
                    "type": "boolean",
                    "description": "Do not load the iGenomes reference config.",
                    "fa_icon": "fas fa-ban",
                    "help_text": "Do not load `igenomes.config` when running the pipeline. You may choose this option if you observe clashes between custom parameters and those supplied in `igenomes.config`.",
                    "default": true
                },
                "igenomes_base": {
                    "type": "string",
                    "format": "directory-path",
                    "description": "The base path to the igenomes reference files",
                    "fa_icon": "fas fa-ban",
                    "hidden": true,
                    "default": "s3://ngi-igenomes/igenomes"
                },
                "aligner": {
                    "type": "string",
                    "default": "bwamem",
                    "fa_icon": "fas fa-puzzle-piece",
                    "description": "Specify aligner to be used to map reads to reference genome.",
                    "enum": ["bwamem", "bwaaln", "bowtie2"]
                },
                "comparison_maker": {
                    "type": "string",
                    "default": "spp",
                    "enum": ["spp", "bigwigcompare"],
                    "fa_icon": "fas fa-percentage",
                    "description": "Specify the tool to be used to generate comparisons"
                },
                "trimmer": {
                    "type": "string",
                    "default": "trimgalore",
                    "fa_icon": "fas fa-cut",
                    "enum": ["trimgalore", "trimmomatic"],
                    "description": "Specify the program to use for read trimming"
                },
                "bwa_index": {
                    "type": "string",
                    "description": "Path to directory or tar.gz archive for pre-built BWA index.",
                    "fa_icon": "fas fa-book",
                    "format": "path"
                },
                "save_reference": {
                    "type": "boolean",
                    "description": "If generated by the pipeline save the aligner index (e.g. BWA) in the results directory.",
                    "help_text": "If the index generated by the aligner is generated by the pipeline use this parameter to save it to your results folder. These can then be used for future pipeline runs, reducing processing times.",
                    "fa_icon": "fas fa-save"
                },
                "bowtie2_index": {
                    "type": "string",
                    "fa_icon": "fas fa-book",
                    "description": "Path to directory or tar.gz archive for pre-built bowtie2 index."
                },
                "save_unaligned": {
                    "type": "boolean",
                    "description": "If generated by the pipeline save the BWA index in the results directory.",
                    "fa_icon": "fas fa-save"
                },
                "blacklist": {
                    "type": "string",
                    "fa_icon": "fas fa-book-dead",
                    "description": "A BED or GTF file containing regions that should be excluded from all analyses.",
                    "help_text": "Currently this works by rejecting genomic chunks that happen to overlap an entry. Consequently, for BAM files, if a read partially overlaps a blacklisted region or a fragment spans over it, then the read/fragment might still be considered. Please note that you should adjust the effective genome size, if relevant.",
                    "format": "file-path"
                }
            }
        },
        "institutional_config_options": {
            "title": "Institutional config options",
            "type": "object",
            "fa_icon": "fas fa-university",
            "description": "Parameters used to describe centralised config profiles. These should not be edited.",
            "help_text": "The centralised nf-core configuration profiles use a handful of pipeline parameters to describe themselves. This information is then printed to the Nextflow log when you run a pipeline. You should not need to change these values when you run a pipeline.",
            "properties": {
                "custom_config_version": {
                    "type": "string",
                    "description": "Git commit id for Institutional configs.",
                    "default": "master",
                    "hidden": true,
                    "fa_icon": "fas fa-users-cog"
                },
                "custom_config_base": {
                    "type": "string",
                    "description": "Base directory for Institutional configs.",
                    "default": "https://raw.githubusercontent.com/nf-core/configs/master",
                    "hidden": true,
                    "help_text": "If you're running offline, Nextflow will not be able to fetch the institutional config files from the internet. If you don't need them, then this is not a problem. If you do need them, you should download the files from the repo and tell Nextflow where to find them with this parameter.",
                    "fa_icon": "fas fa-users-cog"
                },
                "config_profile_name": {
                    "type": "string",
                    "description": "Institutional config name.",
                    "hidden": true,
                    "fa_icon": "fas fa-users-cog"
                },
                "config_profile_description": {
                    "type": "string",
                    "description": "Institutional config description.",
                    "hidden": true,
                    "fa_icon": "fas fa-users-cog"
                },
                "config_profile_contact": {
                    "type": "string",
                    "description": "Institutional config contact information.",
                    "hidden": true,
                    "fa_icon": "fas fa-users-cog"
                },
                "config_profile_url": {
                    "type": "string",
                    "description": "Institutional config URL link.",
                    "hidden": true,
                    "fa_icon": "fas fa-users-cog"
                }
            }
        },
        "generic_options": {
            "title": "Generic options",
            "type": "object",
            "fa_icon": "fas fa-file-import",
            "description": "Less common options for the pipeline, typically set in a config file.",
            "help_text": "These options are common to all nf-core pipelines and allow you to customise some of the core preferences for how the pipeline runs.\n\nTypically these options would be set in a Nextflow config file loaded for all pipeline runs, such as `~/.nextflow/config`.",
            "properties": {
                "version": {
                    "type": "boolean",
                    "description": "Display version and exit.",
                    "fa_icon": "fas fa-question-circle",
                    "hidden": true
                },
                "publish_dir_mode": {
                    "type": "string",
                    "default": "copy",
                    "description": "Method used to save pipeline results to output directory.",
                    "help_text": "The Nextflow `publishDir` option specifies which intermediate files should be saved to the output directory. This option tells the pipeline what method should be used to move these files. See [Nextflow docs](https://www.nextflow.io/docs/latest/process.html#publishdir) for details.",
                    "fa_icon": "fas fa-copy",
                    "enum": ["symlink", "rellink", "link", "copy", "copyNoFollow", "move"],
                    "hidden": true
                },
                "email_on_fail": {
                    "type": "string",
                    "description": "Email address for completion summary, only when pipeline fails.",
                    "fa_icon": "fas fa-exclamation-triangle",
                    "pattern": "^([a-zA-Z0-9_\\-\\.]+)@([a-zA-Z0-9_\\-\\.]+)\\.([a-zA-Z]{2,5})$",
                    "help_text": "An email address to send a summary email to when the pipeline is completed - ONLY sent if the pipeline does not exit successfully.",
                    "hidden": true
                },
                "plaintext_email": {
                    "type": "boolean",
                    "description": "Send plain-text email instead of HTML.",
                    "fa_icon": "fas fa-remove-format",
                    "hidden": true
                },
                "max_multiqc_email_size": {
                    "type": "string",
                    "description": "File size limit when attaching MultiQC reports to summary emails.",
                    "pattern": "^\\d+(\\.\\d+)?\\.?\\s*(K|M|G|T)?B$",
                    "default": "25.MB",
                    "fa_icon": "fas fa-file-upload",
                    "hidden": true
                },
                "monochrome_logs": {
                    "type": "boolean",
                    "description": "Do not use coloured log outputs.",
                    "fa_icon": "fas fa-palette",
                    "hidden": true
                },
                "hook_url": {
                    "type": "string",
                    "description": "Incoming hook URL for messaging service",
                    "fa_icon": "fas fa-people-group",
                    "help_text": "Incoming hook URL for messaging service. Currently, MS Teams and Slack are supported.",
                    "hidden": true
                },
                "skip_multiqc": {
                    "type": "boolean",
                    "fa_icon": "fas fa-fast-forward",
                    "description": "Skip MultiQC."
                },
                "multiqc_config": {
                    "type": "string",
                    "format": "file-path",
                    "description": "Custom config file to supply to MultiQC.",
                    "fa_icon": "fas fa-cog",
                    "hidden": true
                },
                "multiqc_logo": {
                    "type": "string",
                    "description": "Custom logo file to supply to MultiQC. File name must also be set in the MultiQC config file",
                    "fa_icon": "fas fa-image",
                    "hidden": true
                },
                "multiqc_methods_description": {
                    "type": "string",
                    "description": "Custom MultiQC yaml file containing HTML including a methods description.",
                    "fa_icon": "fas fa-cog"
                },
                "validate_params": {
                    "type": "boolean",
                    "description": "Boolean whether to validate parameters against the schema at runtime",
                    "default": true,
                    "fa_icon": "fas fa-check-square",
                    "hidden": true
                },
                "pipelines_testdata_base_path": {
                    "type": "string",
                    "fa_icon": "far fa-check-circle",
                    "description": "Base URL or local path to location of pipeline test dataset files",
                    "default": "https://raw.githubusercontent.com/nf-core/test-datasets/",
                    "hidden": true
                },
                "stopAt": {
                    "type": "string",
                    "description": "Specify after which step the pipeline should stop.",
                    "fa_icon": "fas fa-ban",
                    "enum": [
                        "BEGIN",
                        "PREPARE_GENOME",
                        "INPUT_CHECK",
                        "CAT_FASTQ_lane",
                        "CAT_FRACTIONS",
                        "TRIMMOMATIC",
                        "FASTQ_ALIGN_BWAALN",
                        "SAMTOOLS_FAIDX",
                        "BAM_MARKDUPLICATES_PICARD",
                        "DEEPTOOLS_BAMCOVERAGE",
                        "RTWOSAMPLESMLE"
                    ],
                    "hidden": true
                },
                "combine_fractions": {
                    "type": "boolean",
                    "fa_icon": "fas fa-copy",
                    "hidden": true
                },
                "trace_report_suffix": {
                    "type": "string",
                    "fa_icon": "far calendar",
                    "description": "Suffix to add to the trace report filename. Default is the date and time in the format yyyy-MM-dd_HH-mm-ss.",
                    "hidden": true
                },
                "platform": {
                    "type": "string",
                    "default": "ILLUMINA",
                    "description": "\"Sequencing platform identifier for BAM read group header",
                    "fa_icon": "fas fa-align-justify"
                },
                "extendReads": {
                    "type": "integer",
                    "description": "Defines how much the reads should be extended",
                    "fa_icon": "fas fa-align-justify"
                },
                "bw_resolution": {
                    "type": "integer",
                    "description": "bw_resolution (expressed in base pairs) for genome coverage calculation (default 1).",
                    "default": 1,
                    "fa_icon": "fas fa-align-justify"
                },
                "normalizeUsing": {
                    "type": "string",
                    "description": "Method selecte to perform the normalizazion",
                    "default": "RPKM",
                    "enum": ["RPKM", "CPM", "BPM", "RPGC"],
                    "fa_icon": "fas fa-align-justify"
                },
                "effectiveGenomeSize": {
                    "type": "integer",
                    "description": "Estimated genome size to performing the normalization",
                    "fa_icon": "fas fa-align-justify"
                },
                "ignoreForNormalization": {
                    "type": "string",
                    "description": "A list of space-delimited chromosome names containing those chromosomes that should be excluded for computing the normalization",
                    "fa_icon": "fas fa-align-justify"
                },
                "keep_regions_bed": {
                    "type": "string",
                    "description": "A list of regions that will be kept in the output after filtering the alignment with samtools using -L option in addition to the flag and quality threshold filters",
                    "fa_icon": "fas fa-align-justify"
                },
                "q_score": {
                    "type": "integer",
                    "default": 1,
                    "description": "skip alignments with MAPQ smaller than 'value' (1 default)",
                    "fa_icon": "fas fa-align-justify"
                },
                "flag": {
                    "type": "integer",
                    "default": 1540,
                    "description": "If set filter reads based on specific flags. Flags represent various properties of a read, such as whether it's mapped, paired, or properly aligned (default 1540)",
                    "fa_icon": "fas fa-align-justify"
                },
                "region": {
                    "type": "string",
                    "description": "Region of the genome to limit the operation to - this is useful when testing parameters to reduce the computing time. The format is chr:start:end, for example \u2013region chr10 or \u2013region chr10:456700:891000.",
                    "fa_icon": "fas fa-align-justify"
                },
                "numberOfSamples": {
                    "type": "integer",
                    "default": 500000,
                    "description": "The number of bins that are sampled from the genome, for which the overlapping number of reads is computed. (Default: 500000)",
                    "fa_icon": "fas fa-align-justify"
                },
                "binsize": {
                    "type": "integer",
                    "description": "Deeptools multiBamSummary bam bin size (Default 50000).",
                    "fa_icon": "fas fa-align-justify"
                },
                "corr_method": {
                    "type": "string",
                    "default": "spearman",
                    "enum": ["pearson", "spearman"],
                    "description": "Deeptools Correlation Plot statistical calculation method",
                    "fa_icon": "fas fa-bars"
                },
                "fragment_size": {
                    "type": "integer",
                    "default": 100,
                    "description": "Fragment size parameter for single-end data. When set to a positive value, it enables the --extendReads option in DeepTools, extending reads to the specified length. This parameter is only used for single-end data processing and does not affect paired-end data analysis.",
                    "fa_icon": "fas fa-align-justify",
                    "hidden": true
                },
                "chrom_sizes": {
                    "type": "string",
                    "description": "Optionally provide chromosome sizes file as input",
                    "fa_icon": "fas fa-align-justify"
                },
                "fai": {
                    "type": "string",
                    "description": "Optionally provide FASTA index (.fai) file as input",
                    "fa_icon": "fas fa-align-justify"
                },
                "gtf": {
                    "type": "string",
                    "fa_icon": "fas fa-align-justify",
                    "description": "Path to GTF annotation file."
                },
                "plotfingerprint": {
                    "type": "boolean",
                    "description": "Enable deepTools plotFingerprint analysis for quality control assessment",
                    "fa_icon": "fas fa-align-justify"
                },
                "gene_bed": {
                    "type": "string",
                    "description": "Path to BED file containing gene intervals. This will be created from the GTF file if not specified.",
                    "fa_icon": "fas fa-align-justify"
                },
                "tss_bed": {
                    "type": "string",
                    "fa_icon": "fas fa-align-justify",
                    "description": "Path to BED file containing TSS regions"
                }
            }
        }
    },
    "allOf": [
        {
            "$ref": "#/$defs/input_output_options"
        },
        {
            "$ref": "#/$defs/reference_genome_options"
        },
        {
            "$ref": "#/$defs/institutional_config_options"
        },
        {
            "$ref": "#/$defs/generic_options"
        }
    ],
    "properties": {
        "bigwigcompare_bin_size": {
            "type": "integer",
            "description": "Size of the bins, in bases.",
            "default": 50
        },
        "bigwigcompare_fixed_step": {
            "type": "boolean",
            "description": "Write out all bins (of size \u2013binSize).",
            "default": true
        },
        "bigwigcompare_skip_non_covered_regions": {
            "type": "boolean",
            "description": "Avoids interpretation of non-covered regions as zeros.",
            "default": true
        },
        "bigwigcompare_operation": {
            "type": "string",
            "description": "Specifies mathematical operation applied to sample fractions.",
            "default": "log2"
        },
        "bigwigcompare_pseudocount": {
            "type": "number",
            "description": "A small number to avoid x/0. Only useful together with \u2013operation log2 or \u2013operation ratio.",
            "default": 1e-14
        }
    }
}
